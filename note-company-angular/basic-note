工作开发过程注意要点
在整个模型操作过程中所有的数据变化都在￥ｓｃｏｐｅ中保存.

１．ｅｎｖ中纪录这环境的后端接口和各工程的依赖关系
２．ｆｉｓ－ｃｏｎｆ记录着每个项目模块的打包信息
３．每个项目中最主要的部分是ｃｏｎｔｒｏｌｌｅｒ和ｓｅｒｖｉｃｅ，ｃｏｎｔｒｏｌｌｅｒ中处理业务，ｓｅｒｖｉｃｅ中处理交互，基本上公共的组件都在ｓｒｃ中放着，需要时可以引用．
４．item in overallData track by $index　生成独立唯一的ｉｄ，避免重复
５．表格数据展示时，数据头部的信息可能存放在本地的ｊｓｏｎ文件中，而实际的数据存放在其他地方（前后端交互拿取）
６．进行表格添加新的行时，根据提前预制的模版，往当前的数据组中添加模版进行数据的填写，第四条中的$ｉｎｄｅｘ确保改变对应的值
７．在穿透的到详情的时候，具体的出发操作是在infi-table columns组件中的btnCallback方法定义的,使用时在ｃｏｎｔｒｏｌｌｅｒ定义相关的方法就可以进行操作,
eg:$scope.btnCallback = function(opt,type)
８．ng-class实际用法，对于业务进行判断格式ng-class="{true:'col-md-12',false:'col-md-4'}[opt.children.length >0 ]"
９.获取ｕｒｌ的两种方法:
url:backApi['diseases-plan-src'].url//在ｅｎｖ总体的项目文件中定义
url:'http://47.92.143.156:23110/portrait/'//直接在项目中定义
１０．angular.module('infi-basic').controller('DetailsController', ['$scope', 'SYS', 'DetailsService', '$routeParams',
'CheckDeviceService', '$location', function ($scope, SYS, DetailsService, $routeParams, CheckDeviceService, $location) {
DetailsController－－控制器名字
$scope－－－当前作用域，与ｖｉｅｗ进行数据挂载的中间件
ＳＹＳ我们声明的常见参数值
ｒｏｕｔｅｒＰａｒａｍｓ－－路由携带的参数值
CheckDeviceService－－我们生命的后台交互方法
$location－－－路径值集合

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－

业务及数据流程概括：
在ｃｏｎｔｒｏｌｌｅｒ中进行业务数据的初始化．
有穿透的业务，在拿到业务的值后，根据需要向后台进行请求，触发相关事件．
根据后续操作，结合标识符进行相同类型的数据处理及页面部分的显隐性处理．

健康画像业务处理－异常项目－异常解读业务操作解析ｅｇ：
在首次操作时ｉｎｉｔ后拿到相关信息，根据具体的标识符，将数据放置在检查和检验之中．
ng-repeat="exam in exceptionProject.data.examInfo"－－－循环输入到对应的视图部分
ｄｅｔａｉｌｓ．ｃｏｎｔｒｏｌｌｅｒ的１８６行．在初始话的时候会进行判断，如果有检查事件的值，将会将检查的第一个数据传入queryClass方法，
获取异常解读数据，否则将获取检验第一条的异常解读．
ng-click="queryClass(exam,'exam')"根据异常项目的视图，获取对应的异常解读置于对应的视图中



－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
交接部分－－－－业务不复杂
１．宁夏大屏系统，主要集中在对数据的操作上
２．护理不良事件，主要集中在数据的筛选和表格形式的数据展示，注意联动情况和ｎｇ－ｍｏｄｅｌ的绑定关系，图表展示格式对数据的处理及展示
３．picc延续护理，主要是ｔａｂ页切换时的数据处理
４．武汉健康画像，主要是身体图的引用及相关数据联动
５．多科就诊，主要是数据图表数据的处理
６．疾病推荐方案，主要是筛选数据,治疗方案的穿透及相关组件的引用
７．肾内科日表表统计，主要是数据的穿透显示
８．地坛phpcms，主要是根据系统关联相关项目地址
９．



-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ａｐｐ．ｊｓ封装了最基础的入口文件

在路由跳转成功后，挂接对应的ｃｏｎｔｒｏｌｌｅｒ，ｓｅｒｖｉｃｅ及文件中所有到自定义ｄｉｒｅｃｔｉｖｅ指令；
ｃｏｎｔｒｏｌｌｅｒ中我们可以对相关的页面进行初始化及相关操作，也可以生成ｗａｔｃｈ对状态进行监控

作用域是工作的上下文环境，存放应用模型及视图相关的回调行为，可以观察表达式及传播事件，以层次化的结构与ｄｏｍ记性进行对应．
！！指令和控制器只能通过作用域链接.

作用域传播事件：
广播（$broadcast）到子作用域或者向上传播到父作用（$emit）域中（当前的层级作用域也会受到影响）

获取ＤＯＭ作用域：
作用域是与视图相关联的，我们可以在debug的时候通过api获取绑定到视图的作用域。
通过$0便可获得当前选中的DOM元素。
通过angular.element($0).scope()或者$scope可以获得当前元素对应的作用域。

作用域的生命周期
1. 创建 - 更作用域会在应用启动时通过注入器创建并注入。在模板连接阶段，一些指令会创建自己的作用域。
2. 注册观察者 - 在模板连接阶段，将会注册作用域的监听器。这也监听器被用来识别模型状态改变并更新视图。
3. 模型状态改变 - 更新模型状态必须发生在scope.$apply方法中才会被观察到。
4. 观察模型状态 - 在$apply结束阶段，angular会从根作用域执行$digest过程并扩散到子作用域。在这个过程中被观察的表达式或方法会检查模型状态是否变更及执行更新。
5. 销毁作用域，当不再需要子作用域时，通过scope.$destroy()销毁作用域，回收资源。


$scope.$apply();模型改变需要重绘视图


－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－



angular:directive()自定义组件

angular:$evel,$parse,$compile
相关知识点：$scope中储存的是当前controller中的上下文，当删除controller后，当前文中的上下级关系就存放在$rootscope中
var getter=$parse('user.name')
var setter=getter.assign.
var context={user:{name:'ag'}}
var locals={user:{name:'la'}}


$evel继承了$parse.
$parse,当前控制器解析上下文时，告诉当前服务解析的地址是哪里.
getter(context).toEqual('angular')===>$parse('user.name')(context);
获取当前表达式user.name,获取上下文对象{user:{name:'ag'}},从上下文中寻找表达式，拿到对应的值ａｇ；

$compile将模版进行变更，里面接入的ｄｏｍ．
$new($scope),表示声明的新对象有新的的作用域



－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
ｎｇ－ｍｏｄａｌ用语存储带有业务作用的数据，来进行从常规的业务操作

 <link rel="import" href="tpl/event.level.details.html?__inline">
 在视图中采用嵌套的方式,ｃｏｎｔｒｏｌｌｌｅｒ和service是可以使用的，享用与主页面一样全责的业务处理.

 ｅｇ：admission-regist-src中的ｖｉｅｗ(出入院登记)
 返回来的值进行计算时，直接对原有的值进行复制操作，

 angular.forEach($scope.wardSearchObj.filterRst, function(val, ind) {
         val.otherValue = val.totalValue - val.singleValue
       })
－－－－－这是在上面请求后台拿到值后进行取值计算操作，并在原有的对象中附加ｏｔｈｅｒＶａｌｕｅ属性

data: [
                {value: $scope.wardSearchObj.filterRst[1].singleValue, name: "当前病区"},
                {value: $scope.wardSearchObj.filterRst[1].otherValue, name: "其他病区"}
              ]
－－－－－－－前面的计算中对象中已经新添的相关的属性，可以在后续业务中进行使用




－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
北京－－－－郑州
９３　　硬座　　
１６３　卧铺　这个　　　２１：１０　－－－　３：０３　　　２１．１６－－－３．３３　　
２１６　动车

北京－－－－武汉
２６１．５　　卧铺　　　２１：１０－－－０７：４８　　　２１：１６－－－０８：２６　　２２：００－－－１０：２２　　　


郑州－－－武昌　　　　　　
硬座　７５　　这个　　　０４：０４－－－０８：２６　　　０４：４９－－－０９：３５　
卧铺　１３３　
高铁　２４４







