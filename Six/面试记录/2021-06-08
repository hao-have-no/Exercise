### 为什么要用webpack
1. 模块化开发（import，require）
2. 预处理（Less，Sass，ES6，TypeScript……）
3. 文件压缩,将多个文件压缩到一起
4. 合并的过程进行打包,进行文件之间的依赖分析,浏览器运行代码的时候就可以读取这个文件，就知道了各个代码块之间的关联以及如何调用了。
5. 既保留了单个模块的可维护性，又减少了页面的http请求，减少了页面加载时间，从而增加了页面的显示速度，让整个应用的体验更好。

### cdn原理
CDN（Content Delivery Network，内容分发网络）将源站的内容发布到接近用户的网络“边缘”，
用户可以就近获取所需数据，不仅降低了网络的拥塞状况、提高请求的响应速度，也能够减少源站的负载压力。

1. 资源加载过程
> 缓存直接到源站请求数据的过程
+ DNS的迭代解析模式获取域名对应的IP地址并发送HTTP请求的过程:
-->在本机的hosts文件和hosts缓存中查找该域名对应的IP地址；如果本机中没有此信息，
则会到我们的本地DNS进行询问该域名对应的IP地址；如果本地DNS中仍然没有该域名的IP信息时，
则会由本地DNS依次向根DNS、顶级域DNS、权威DNS进行询问，最终本地DNS将IP地址发送给客户端

+ dns记录类型:
--> 最常见的资源记录方式是Internet类记录
--> 由包含4个字段的数据构成：Name、Value、Type、TTL。
其中Name和Value可以理解为一对键值对，
但是其具体含义取决于Type的类型，
TTL记录了该条记录应当从缓存中删除的时间。
--> type主要类型有:
+ Address记录,用于描述目标域名到IP地址的映射关系，
将目标域名与Address记录的Name字段进行匹配，将成功匹配的记录的Value字段的内容（IP地址）输出到DNS回应报文中。'
+ NS记录（Name Server）:
NS记录用于描述目标域名到负责解析该域名的DNS的映射关系，根据目标域名对NS记录的Name字段进行匹配，将成功匹配的记录的Value字段
+ CNAME记录
CNAME记录用于描述目的域名和别名的对应关系

2. 通过cdn获取缓存内容的过程
--> CDN将我们对源站的请求导向了距离用户较近的缓存节点，而非源站
DNS解析域名时新增了一个全局负载均衡系统（GSLB），
GSLB的主要功能是根据用户的本地DNS的IP地址判断用户的位置，
筛选出距离用户较近的本地负载均衡系统（SLB），并将该SLB的IP地址作为结果返回给本地DNS

--> SLB主要负责判断缓存服务器集群中是否包含用户请求的资源数据，如果缓存服务器中存在请求的资源，
则根据缓存服务器集群中节点的健康程度、负载量、连接数等因素筛选出最优的缓存节点，并将HTTP请求重定向到最优的缓存节点上。


--> 以http请求为例
+ 用户发起对"join.qq.com/video.php"的HTTP请求，首先需要通过本地DNS通过"迭代解析"的方式获取域名"join.qq.com"的IP地址
+ 如果本地DNS的缓存中没有该域名的记录，则向根DNS发送DNS查询报文
+ 根DNS发现域名的前缀为"com"，则给出负责解析com的顶级DNS的IP地址
+ 本地DNS向顶级DNS发送DNS查询报文
+ 顶级DNS发现域名的前缀为"qq.com"，在本地记录中查找负责该前缀的权威DNS的IP地址并进行回复
+ 本地DNS向权威DNS发送DNS查询报文
+ 权威DNS查找到一条NAME字段为"join.qq.com"的CNAME记录（由服务提供者配置）
记录的Value字段为"join.qq.cdn.com"；并且还找到另一条NAME字段为"join.qq.cdn.com"的A记录，
该记录的Value字段为GSLB的IP地址
+ GSLB根据本地DNS的IP地址判断用户的大致位置为深圳
筛选出位于华南地区且综合考量最优的SLB的IP地址填入DNS回应报文，作为DNS查询的最终结果
+ 本地DNS向GSLB发送DNS查询报文
+ 本地DNS回复客户端的DNS请求，将上一步的IP地址作为最终结果回复给客户端
+ 客户端根据IP地址向SLB发送HTTP请求
+ SLB综合考虑缓存服务器集群中各个节点的资源限制条件、健康度、负载情况等因素，
筛选出最优的缓存节点后回应客户端的HTTP请求（状态码为302，重定向地址为最优缓存节点的IP地址）；
+ 客户端接收到SLB的HTTP回复后，重定向到该缓存节点上
+ 缓存节点判断请求的资源是否存在、过期，将缓存的资源直接回复给客户端，否则到源站进行数据更新再回复。

CDN中最为常见的工作方式，这种工作方式利用CNAME将域名和目标IP之间进行解耦，
将目标IP的解析权下放到GSLB中，方便实现更多自定义的功能，是一种更加灵活的方式
### ssr


### vue3和vue2区别


### typeof,instanceof,Object.prototype.toString.call() 判断对象类型及原理


### common.js,,amd-require.js,es6-module,cmd


### tcp/udp及相关问题


### plugins和component有什么区别?


### performance


### element和node的区别
